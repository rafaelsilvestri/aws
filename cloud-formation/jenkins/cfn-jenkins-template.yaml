Description:  This template deploys a single EC2 instance and setup the Jenkins behind an Nginx.

Parameters:
  VPC:
    Description: Please enter the VPC for the security group of this intance.
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: must be the id of an existing VPC.
  Subnet:
    Description: Please enter the Subnet Id for the instance.
    Type: 'AWS::EC2::Subnet::Id'
    ConstraintDescription: must be the id of an existing Subnet.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AMI:
    Description: ID of the AMI (must be a Linux)
    Type: String
    Default: ami-0dba2cb6798deb6d8 # Ubuntu us-east-1
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.nano
    AllowedValues: [
      t3.nano, 
      t3.small, 
      t3.medium, 
      t3.large, 
      t3.xlarge,
      m5.nano, 
      m5.small, 
      m5.medium, 
      m5.large, 
      m5.xlarge
    ]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description : "The IP address range that can be used to SSH to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/32
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.  
  HTTPLocation:
    Description : "The IP address range that can be used to HTTP to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/32
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  # Tag values
  EnvironmentType:
    Description: Environment Identifier
    Type: String
    AllowedValues:
      - PRODUCTION
      - PRE-PRODUCTION
      - DEVELOPMENT
      - LAB
  AssetId:
    Description: The asset identifier that the stack belongs to
    Type: String
    Default: poc

Resources:  

  JenkinsInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref JenkinsSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AMI
      SubnetId: !Ref Subnet
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            # install docker
            apt-get update && sudo apt-get install -y docker.io
            # install Java
            apt-get install -y openjdk-8-jdk
            # install Jenkins
            wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
            sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
            apt update
            apt install -y jenkins
            systemctl start jenkins
            
            # firewall: open port 8080 
            sudo ufw allow 8080
            sudo ufw allow OpenSSH
            sudo ufw enable
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${EnvironmentType}
        - Key: environment-type
          Value: !Ref EnvironmentType
        - Key: asset-id
          Value: !Ref AssetId

  # Security Groups
  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-${EnvironmentType}_sg
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref HTTPLocation
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${EnvironmentType}
        - Key: environment-type
          Value: !Ref EnvironmentType
        - Key: asset-id
          Value: !Ref AssetId
          
Outputs:
  JenkinsInstancePrivateIp:
    Description: The private ip of this instance
    Value: !GetAtt JenkinsInstance.PrivateIp
  JenkinsInstancePublicIp:
    Description: The public ip of this instance
    Value: !GetAtt JenkinsInstance.PublicIp